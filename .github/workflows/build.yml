---

name: Build OpenTelemetry Collector Lambda distribution
on:
  workflow_dispatch:
    inputs:
      repository:
        description: OpenTelemetry collector repository (OWNER/REPO)
        type: string
        default: aereal/opentelemetry-lambda
      ref:
        description: commit reference to be built
        type: string
        default: own-dist
      go_version:
        description: Go version to build
        type: string
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME_LAMBDA_GO: ${{ github.repository }}/lambda_go
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout build configuration
        uses: actions/checkout@v3
      - name: checkout source repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          path: src
      - id: determine_hash
        run: |
          echo "commit_hash=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
        working-directory: ./src
      - run: |
          echo "# Build $repo" >> "$GITHUB_STEP_SUMMARY"
          echo >> "$GITHUB_STEP_SUMMARY"
          echo "- ref: [\`$commit_ref\`](https://github.com/$repo/tree/$commit_ref)" >> "$GITHUB_STEP_SUMMARY"
          echo "- commit hash: [\`$commit_hash\`](https://github.com/$repo/commit/$commit_hash)" >> "$GITHUB_STEP_SUMMARY"
        env:
          repo: ${{ inputs.repository }}
          commit_ref: ${{ inputs.ref }}
          commit_hash: ${{ steps.determine_hash.outputs.commit_hash }}
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go_version }}
          cache-dependency-path: src/collector/go.sum
      - name: build
        run: make build
        working-directory: src/collector
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LAMBDA_GO }}
      - name: Copy distributions
        run: |
          root="./lambda_runtime/go"
          extensions_dir="$root/extensions"
          config_dir="$root/collector-config"
          rm -rf "$extensions_dir" "$config_dir"
          cp -R ./src/collector/build/extensions "$root/"
          mkdir -p "$config_dir"
          cp ./src/collector/config.yaml "$config_dir/"
      - uses: docker/build-push-action@v4
        with:
          context: ./lambda_runtime/go
          file: ./lambda_runtime/go/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
